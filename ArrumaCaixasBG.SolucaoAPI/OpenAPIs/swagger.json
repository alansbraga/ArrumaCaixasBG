{
  "openapi": "3.0.1",
  "info": {
    "title": "API",
    "version": "v1"
  },
  "paths": {
    "/Packing/calculations": {
      "get": {
        "tags": [
          "Packing"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonJob"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonJob"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonJob"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Packing"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonJob"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonJob"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonJob"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonStatus"
                }
              }
            }
          }
        }
      }
    },
    "/Packing/calculations/{id}": {
      "get": {
        "tags": [
          "Packing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonJob"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonJob"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonJob"
                }
              }
            }
          }
        }
      }
    },
    "/Packing/calculations/status": {
      "get": {
        "tags": [
          "Packing"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonStatus"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonStatus"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/JsonStatus"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Packing/calculations/{id}/status": {
      "get": {
        "tags": [
          "Packing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonStatus"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonStatus"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonStatus"
                }
              }
            }
          }
        }
      }
    },
    "/Packing/calculations/{id}/solution": {
      "get": {
        "tags": [
          "Packing"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSolution"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSolution"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/JsonSolution"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Configuration": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/MethodType"
          },
          "timeLimitInSeconds": {
            "type": "number",
            "format": "double"
          },
          "handleGravity": {
            "type": "boolean"
          },
          "handleCompatibility": {
            "type": "boolean"
          },
          "handleStackability": {
            "type": "boolean"
          },
          "handleRotatability": {
            "type": "boolean"
          },
          "handleForbiddenOrientations": {
            "type": "boolean"
          },
          "seed": {
            "type": "integer",
            "format": "int32"
          },
          "threadLimit": {
            "type": "integer",
            "format": "int32"
          },
          "goal": {
            "$ref": "#/components/schemas/OptimizationGoal"
          },
          "solverToUse": {
            "$ref": "#/components/schemas/Solvers"
          },
          "pieceOrder": {
            "$ref": "#/components/schemas/PieceOrderType"
          },
          "improvement": {
            "type": "boolean"
          },
          "tetris": {
            "type": "boolean"
          },
          "bestFit": {
            "type": "boolean"
          },
          "exhaustiveEPProne": {
            "type": "boolean"
          },
          "scoreBasedOrder": {
            "type": "boolean"
          },
          "meritType": {
            "$ref": "#/components/schemas/MeritFunctionType"
          },
          "randomSalt": {
            "type": "number",
            "format": "double"
          },
          "normalizationOrder": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DimensionMarker"
            },
            "nullable": true
          },
          "stagnationDistance": {
            "type": "integer",
            "format": "int32"
          },
          "maximumPercentageOfStoreModification": {
            "type": "number",
            "format": "double"
          },
          "initialMaximumPercentageOfStoreModification": {
            "type": "number",
            "format": "double"
          },
          "possibleSwaps": {
            "type": "integer",
            "format": "int32"
          },
          "maxSwaps": {
            "type": "integer",
            "format": "int32"
          },
          "longTermScoreReInitDistance": {
            "type": "integer",
            "format": "int32"
          },
          "inflateAndReplaceInsertion": {
            "type": "boolean"
          },
          "pushInsertionVIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DimensionMarker": {
        "enum": [
          "X",
          "Y",
          "Z"
        ],
        "type": "string"
      },
      "FlagRuleType": {
        "enum": [
          "DISJOINT",
          "LESSEREQUALSPIECES",
          "LESSEREQUALSTYPES"
        ],
        "type": "string"
      },
      "JsonAssignment": {
        "type": "object",
        "properties": {
          "piece": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "$ref": "#/components/schemas/JsonPosition"
          }
        },
        "additionalProperties": false
      },
      "JsonContainer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "JsonCube": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "length": {
            "type": "number",
            "format": "double"
          },
          "width": {
            "type": "number",
            "format": "double"
          },
          "height": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "JsonFlag": {
        "type": "object",
        "properties": {
          "flagId": {
            "type": "integer",
            "format": "int32"
          },
          "flagValue": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JsonFlagRule": {
        "type": "object",
        "properties": {
          "flagId": {
            "type": "integer",
            "format": "int32"
          },
          "ruleType": {
            "$ref": "#/components/schemas/FlagRuleType"
          },
          "parameter": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JsonInstance": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonContainer"
            },
            "nullable": true
          },
          "pieces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonPiece"
            },
            "nullable": true
          },
          "rules": {
            "$ref": "#/components/schemas/JsonRuleSet"
          }
        },
        "additionalProperties": false
      },
      "JsonJob": {
        "type": "object",
        "properties": {
          "configuration": {
            "$ref": "#/components/schemas/Configuration"
          },
          "instance": {
            "$ref": "#/components/schemas/JsonInstance"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "JsonPiece": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonFlag"
            },
            "nullable": true
          },
          "cubes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonCube"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonPosition": {
        "type": "object",
        "properties": {
          "x": {
            "type": "number",
            "format": "double"
          },
          "y": {
            "type": "number",
            "format": "double"
          },
          "z": {
            "type": "number",
            "format": "double"
          },
          "a": {
            "type": "number",
            "format": "double"
          },
          "b": {
            "type": "number",
            "format": "double"
          },
          "c": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "JsonRuleSet": {
        "type": "object",
        "properties": {
          "flagRules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonFlagRule"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonSolution": {
        "type": "object",
        "properties": {
          "containers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonSolutionContainer"
            },
            "nullable": true
          },
          "offload": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonSolutionContainer": {
        "type": "object",
        "properties": {
          "assignments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonAssignment"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JsonStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/StatusCodes"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "statusUrl": {
            "type": "string",
            "nullable": true
          },
          "problemUrl": {
            "type": "string",
            "nullable": true
          },
          "resultUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MeritFunctionType": {
        "enum": [
          "NONE",
          "MFV",
          "MMPSXY",
          "LPXY",
          "MRSU",
          "MEDXYZ",
          "MEDXY"
        ],
        "type": "string"
      },
      "MethodType": {
        "enum": [
          "EXTREMEPOINTINSERTION",
          "SPACEDEFRAGMENTATION",
          "PUSHINSERTION",
          "ALNS",
          "FRONTLEFTBOTTOMSTYLE",
          "TETRISSTYLE",
          "HYBRIDSTYLE",
          "SPACEINDEXED"
        ],
        "type": "string"
      },
      "OptimizationGoal": {
        "enum": [
          "MINCONTAINER",
          "MAXUTILIZATION"
        ],
        "type": "string"
      },
      "PieceOrderType": {
        "enum": [
          "V",
          "HWL",
          "VWH",
          "HWV",
          "AWH",
          "HWA"
        ],
        "type": "string"
      },
      "Solvers": {
        "enum": [
          "CPLEX",
          "GUROBI"
        ],
        "type": "string"
      },
      "StatusCodes": {
        "enum": [
          "PENDING",
          "ONGOING",
          "DONE",
          "ERROR"
        ],
        "type": "string"
      }
    }
  }
}